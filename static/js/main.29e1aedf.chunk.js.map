{"version":3,"sources":["containers/SearchWeather/WeatherReport/WeatherReport.module.css","containers/SearchWeather/WeatherReport/WeatherSummary/WeatherSummary.module.css","components/UI/WeeklyWeatherCard/WeeklyWeatherCard.module.css","containers/SearchWeather/WeatherReport/DetailedWeatherInformation/DetailedWeatherInformation.module.css","containers/SearchWeather/SearchWeather.module.css","containers/SearchWeather/FiveDaysWeather/FiveDaysWeather.module.css","hoc/Auxiliary/Auxiliary.js","components/UI/Navbar/Navbar.js","containers/SearchWeather/UserInput/UserInput.js","utilities.js","containers/SearchWeather/WeatherReport/WeatherSummary/WeatherSummary.js","containers/SearchWeather/WeatherReport/DetailedWeatherInformation/DetailedWeatherInformation.js","containers/SearchWeather/WeatherReport/WeatherReport.js","components/UI/WeeklyWeatherCard/WeeklyWeatherCard.js","axios-weather.js","containers/SearchWeather/FiveDaysWeather/FiveDaysWeather.js","containers/SearchWeather/SearchWeather.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Aux","props","children","Navbarr","Navbar","bg","expand","variant","Brand","href","className","Toggle","aria-controls","Collapse","id","Nav","Link","target","UserInput","Form","Group","controlId","Label","Control","type","placeholder","Button","onClick","clicked","document","getElementById","value","text2TitleCase","string","text","toLowerCase","split","i","length","toUpperCase","slice","convertTimestampToTime","timestamp","Date","toISOString","WeatherSummary","weathericon","weather","weatherShort","console","log","search","Card","classes","style","border","height","Body","Title","timezoneDiff","now","utc_timestamp","Math","floor","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getDay","convertTimestampToDay","timezone","Subtitle","d","getDate","getMonth","getFullYear","convertTimestampToDate","WeatherIcon","weatherDescription","CityName","city","countryCode","DetailedWeatherInformation","ListGroup","OtherWeatherInformation","Item","fontSize","float","temperature","toFixed","humidity","sunrise","sunset","windSpeed","WeatherReport","classNames","DataColumn","Row","Col","lg","md","weatherData","others","join","main","description","WeatherCard","Day","day","color","WeatherDescription","instance","axios","create","baseURL","FiveDaysWeather","state","fiveDaysData","userCity","this","setState","get","then","response","data","periodicData","list","dt_txt","weatherInformation","temp","dt","push","weatherCards","map","Component","SearchWeather","getWeatherData","coordinates","latitude","coord","lat","longitude","lon","wind","speed","windDirection","deg","sys","name","country","containerData","Container","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29e1aedf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherReport\":\"WeatherReport_WeatherReport__R8jt_\",\"DataColumn\":\"WeatherReport_DataColumn__3qrKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherIcon\":\"WeatherSummary_WeatherIcon__23Hvn\",\"CityName\":\"WeatherSummary_CityName__1YpDg\",\"Card\":\"WeatherSummary_Card__1KU7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"WeeklyWeatherCard_Card__16mfP\",\"Day\":\"WeeklyWeatherCard_Day__2TyOT\",\"WeatherDescription\":\"WeeklyWeatherCard_WeatherDescription__2cuMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"DetailedWeatherInformation_Card__2u-uR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SearchWeather_Container__80CUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"FiveDaysWeather_Row__uSAeS\"};","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nconst Navbarr = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"md\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\"><i className=\"wi wi-day-showers\"></i> Weather Man</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"navbar-items-responsive\"/>\r\n            <Navbar.Collapse id=\"navbar-items-responsive\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">\r\n                        Weather\r\n                    </Nav.Link>\r\n                    <Nav.Link href=\"http://eckarthik.github.io\" target=\"_blank\">\r\n                        About\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navbarr","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nconst UserInput = (props) => {\r\n    return (\r\n        <div className=\"text-center my-5\">\r\n            <Form>\r\n                <Form.Group className=\"text-center\" controlId=\"city\">\r\n                    <Form.Label className=\"text-dark .font-weight-bolder\"><h4>Search for your city here</h4></Form.Label>\r\n                    <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Enter city\"/>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={() => {props.clicked(document.getElementById(\"city\").value)}} variant=\"danger\">\r\n                Search\r\n            </Button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserInput;","const text2TitleCase = (string) => {\r\n    let text = string.toLowerCase().split(\" \");\r\n    for(var i = 0; i< text.length; i++){\r\n       text[i] = text[i][0].toUpperCase() + text[i].slice(1)+\" \";\r\n    }\r\n    \r\n    return text;\r\n }\r\n\r\n const convertTimestampToTime = (timestamp) => {\r\n    return new Date(timestamp * 1e3).toISOString().slice(-13, -5);\r\n }\r\n\r\n const convertTimestampToDay = (timezoneDiff) => {\r\n    let now = new Date();\r\n    let utc_timestamp = Math.floor(Date.UTC(now.getUTCFullYear(),now.getUTCMonth(), now.getUTCDate() , \r\n          now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds()));\r\n    let d = new Date(utc_timestamp+timezoneDiff)\r\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n    return days[d.getDay()];\r\n }\r\n\r\n const convertTimestampToDate = (timezoneDiff) => {\r\n    let now = new Date();\r\n    let utc_timestamp = Math.floor(Date.UTC(now.getUTCFullYear(),now.getUTCMonth(), now.getUTCDate() , \r\n          now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds()));\r\n    let d = new Date(utc_timestamp+timezoneDiff)\r\n    let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\r\n    return d.getDate()+\" \"+months[d.getMonth()]+\" \"+d.getFullYear();\r\n }\r\n\r\nconst toCelsius = (k) => {\r\n    return (k-273.15).toFixed(0);\r\n}\r\n\r\nexport {text2TitleCase,convertTimestampToDay,convertTimestampToDate,convertTimestampToTime,toCelsius}","import React from 'react'\r\nimport classes from './WeatherSummary.module.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {convertTimestampToDate,convertTimestampToDay,text2TitleCase} from '../../../../utilities';\r\nconst WeatherSummary = (props) => {\r\n    \r\n    let weathericon = \"wi wi-cloud\";\r\n    let weather = props.weatherShort.toLowerCase()\r\n    console.log(\"Weather = \"+weather)\r\n    if(weather.search(\"clouds\")!==-1)\r\n    {\r\n        weathericon = \"wi wi-cloudy\"\r\n    }\r\n    if(weather.search(\"rain\")!==-1) {\r\n        weathericon = \"wi wi-rain\"\r\n    }\r\n    if(weather.search(\"thunder\")!==-1) {\r\n        weathericon = \"wi wi-thunderstorm\"\r\n    }\r\n    if(weather.search(\"snow\")!==-1) {\r\n        weathericon = \"wi wi-snow\"\r\n    }\r\n    if(weather.search(\"fog\")!==-1) {\r\n        weathericon = \"wi wi-fog\"\r\n    }\r\n    if(weather.search(\"clear\")!==-1) {\r\n        weathericon = \"wi wi-day-sunny\"\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className={classes.Card} style={{border:\"0px\",height:\"100%\"}}>\r\n            <Card.Body>\r\n                <Card.Title className=\"text-center\">{convertTimestampToDay(props.timezone)}</Card.Title>\r\n                <Card.Subtitle className=\"text-center mb-2 text-muted\">{convertTimestampToDate(props.timezone)}</Card.Subtitle>\r\n                    <div className={classes.WeatherIcon}>\r\n                        <i className={weathericon}/>\r\n                    </div>\r\n                    <p className=\"text-center\">\r\n                        {props.weatherShort}\r\n                    </p>\r\n                    <p className=\"text-center\">\r\n                        {text2TitleCase(props.weatherDescription)}\r\n                    </p>\r\n                    <div className={classes.CityName}>\r\n                        {props.city}\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <p>{props.countryCode}</p>\r\n                    </div>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\nexport default WeatherSummary;","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {toCelsius,convertTimestampToTime} from '../../../../utilities';\r\nimport classes from './DetailedWeatherInformation.module.css';\r\nconst DetailedWeatherInformation = (props) => {\r\n    return (\r\n        <Card className={classes.Card}>\r\n                <ListGroup className={classes.OtherWeatherInformation} variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                        <div>\r\n                            <div><i className=\"wi wi-celsius\" style={{fontSize:\"30px\"}}></i></div>\r\n                            <div style={{float:\"right\",fontSize:\"20px\"}}>{toCelsius(props.temperature)}</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <div>\r\n                            <div><i className=\"wi wi-humidity\" style={{fontSize:\"30px\"}}></i></div>\r\n                            <div style={{float:\"right\",fontSize:\"20px\"}}>{props.humidity}%</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <div>\r\n                            <div><i className=\"wi wi-sunrise\" style={{fontSize:\"30px\"}}></i></div>\r\n                            <div style={{float:\"right\",fontSize:\"20px\"}}>{convertTimestampToTime(props.sunrise)}</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <div>\r\n                            <div><i className=\"wi wi-sunset\" style={{fontSize:\"30px\"}}></i></div>\r\n                            <div style={{float:\"right\",fontSize:\"20px\"}}>{convertTimestampToTime(props.sunset)}</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <div>\r\n                            <div><i className=\"wi wi-windy\" style={{fontSize:\"30px\"}}></i></div>\r\n                            <div style={{float:\"right\",fontSize:\"20px\"}}>{props.windSpeed} m/s</div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default DetailedWeatherInformation;\r\n","import React from 'react';\r\nimport classes from './WeatherReport.module.css';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport WeatherSummary from './WeatherSummary/WeatherSummary';\r\nimport DetailedWeatherInformation from './DetailedWeatherInformation/DetailedWeatherInformation';\r\n\r\nconst WeatherReport = (props) => {\r\n    let classNames = [classes.DataColumn,\"order-first\",\"order-md-last\"]\r\n    return (\r\n        <Row className={classes.WeatherReport}>\r\n            <Col className={classes.DataColumn} lg=\"6\" md=\"12\">\r\n                <DetailedWeatherInformation\r\n                    temperature={props.weatherData.weather.temperature}\r\n                    humidity={props.weatherData.weather.humidity}\r\n                    sunrise={props.weatherData.others.sunrise}\r\n                    sunset={props.weatherData.others.sunset}\r\n                    windSpeed={props.weatherData.weather.windSpeed}\r\n                />\r\n            </Col>\r\n            <Col className={classNames.join(\" \")} lg=\"6\" md=\"12\">\r\n                <WeatherSummary\r\n                    weatherShort={props.weatherData.weather.main}\r\n                    weatherDescription={props.weatherData.weather.description}\r\n                    timezone={props.weatherData.others.timezone}\r\n                    city={props.weatherData.others.city}\r\n                    countryCode={props.weatherData.others.countryCode}\r\n                />\r\n            </Col>\r\n        </Row>\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default WeatherReport;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport classes from './WeeklyWeatherCard.module.css';\r\nconst WeatherCard = (props) => {\r\n    let weathericon = \"wi wi-cloud\";\r\n    let weather = props.weatherShort.toLowerCase()\r\n    console.log(\"Weather = \"+weather)\r\n    if(weather.search(\"clouds\")!==-1)\r\n    {\r\n        weathericon = \"wi wi-cloudy\"\r\n    }\r\n    if(weather.search(\"rain\")!==-1) {\r\n        weathericon = \"wi wi-rain\"\r\n    }\r\n    if(weather.search(\"thunder\")!==-1) {\r\n        weathericon = \"wi wi-thunderstorm\"\r\n    }\r\n    if(weather.search(\"snow\")!==-1) {\r\n        weathericon = \"wi wi-snow\"\r\n    }\r\n    if(weather.search(\"fog\")!==-1) {\r\n        weathericon = \"wi wi-fog\"\r\n    }\r\n    if(weather.search(\"clear\")!==-1) {\r\n        weathericon = \"wi wi-day-sunny\"\r\n    }\r\n    return (\r\n        <Card className={classes.Card}>\r\n            <Card.Body>\r\n                <div className={classes.Day}>{props.day}</div>\r\n                <i className={weathericon} style={{fontSize:\"30px\",color:\"purple\"}}/>\r\n                <div className={classes.WeatherDescription}>{props.weatherDescription}</div>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"http://api.openweathermap.org/data/2.5/\"\r\n})\r\n\r\nexport default instance","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport classes from './FiveDaysWeather.module.css';\r\nimport WeatherCard from '../../../components/UI/WeeklyWeatherCard/WeeklyWeatherCard';\r\nimport axios from '../../../axios-weather';\r\nimport {text2TitleCase} from '../../../utilities';\r\nclass FiveDaysWeather extends Component {\r\n    state = {\r\n        fiveDaysData:null,\r\n        userCity:null\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(\"Something changed in FiveDaysWeather\")\r\n        if(this.state.userCity!==this.props.userCity)\r\n        {\r\n            this.setState({userCity:this.props.userCity})\r\n            axios.get(\"/forecast?q=\"+this.props.userCity+\"&APPID=0a11aab6ebc27539f6bac125b08418ae\")\r\n             .then(response => {\r\n                let periodicData = response.data.list.slice(4);\r\n                let fiveDaysData = [];\r\n                let data;\r\n                for(data of periodicData)\r\n                {\r\n                    if(data.dt_txt.search(\"09:00:00\")!==-1)\r\n                    {\r\n                        let weatherInformation = {\r\n                            temperature:data.main.temp,\r\n                            weatherShort:data.weather[0].main,\r\n                            weatherDescription:data.weather[0].description,\r\n                            timestamp:data.dt\r\n                        }\r\n                        fiveDaysData.push(weatherInformation)\r\n                    }\r\n                }\r\n                console.log(\"Five Days Data\")\r\n                console.log(fiveDaysData)\r\n                this.setState({fiveDaysData:fiveDaysData.slice(0,4)})\r\n             })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({userCity:this.props.userCity})\r\n        axios.get(\"/forecast?q=\"+this.props.userCity+\"&APPID=0a11aab6ebc27539f6bac125b08418ae\")\r\n             .then(response => {\r\n                let periodicData = response.data.list.slice(4);\r\n                let fiveDaysData = [];\r\n                let data;\r\n                for(data of periodicData)\r\n                {\r\n                    if(data.dt_txt.search(\"09:00:00\")!==-1)\r\n                    {\r\n                        let weatherInformation = {\r\n                            temperature:data.main.temp,\r\n                            weatherShort:data.weather[0].main,\r\n                            weatherDescription:data.weather[0].description,\r\n                            timestamp:data.dt\r\n                        }\r\n                        fiveDaysData.push(weatherInformation)\r\n                    }\r\n                }\r\n                console.log(\"Five Days Data\")\r\n                console.log(fiveDaysData)\r\n                this.setState({fiveDaysData:fiveDaysData.slice(0,4)})\r\n             })\r\n    }\r\n\r\n    convertTimestampToDay = (timestamp) => {\r\n        let d = new Date(timestamp*1000)\r\n        let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n        return days[d.getDay()];\r\n     }\r\n\r\n    render() {\r\n        let weatherCards = \"Loading....\";\r\n        if(this.state.fiveDaysData) {\r\n            weatherCards = this.state.fiveDaysData.map(data => {\r\n                return (\r\n                    <Col>\r\n                        <WeatherCard \r\n                            weatherShort={data.weatherShort}\r\n                            weatherDescription={text2TitleCase(data.weatherDescription)} \r\n                            day={this.convertTimestampToDay(data.timestamp)}\r\n                        />\r\n                    </Col>\r\n                        \r\n                );\r\n            });\r\n        }\r\n        \r\n        return (\r\n            <Row className={classes.Row}>\r\n                {weatherCards}\r\n            </Row>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default FiveDaysWeather;","import React,{Component} from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport classes from './SearchWeather.module.css';\r\nimport UserInput from './UserInput/UserInput';\r\nimport WeatherReport from './WeatherReport/WeatherReport';\r\nimport FiveDaysWeather from './FiveDaysWeather/FiveDaysWeather';\r\nimport axios from '../../axios-weather';\r\nclass SearchWeather extends Component {\r\n    state = {\r\n        userCity: \"Bengaluru\",\r\n        weatherInformation:null,\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"ComponentDidMount was called\")\r\n        axios.get(\"/weather?q=\"+this.state.userCity+\"&APPID=0a11aab6ebc27539f6bac125b08418ae\")\r\n             .then(response => {\r\n                let weatherInformation = {\r\n                    coordinates:{\r\n                        latitude:response.data.coord.lat,\r\n                        longitude:response.data.coord.lon\r\n                    },\r\n                    weather: {\r\n                        main:response.data.weather[0].main,\r\n                        description:response.data.weather[0].description,\r\n                        temperature:response.data.main.temp,\r\n                        humidity:response.data.main.humidity,\r\n                        windSpeed:response.data.wind.speed,\r\n                        windDirection:response.data.wind.deg,\r\n                    },\r\n                    others: {\r\n                        sunrise:response.data.sys.sunrise+response.data.timezone,\r\n                        sunset:response.data.sys.sunset+response.data.timezone,\r\n                        city:response.data.name,\r\n                        countryCode:response.data.sys.country,\r\n                        timezone:response.data.timezone\r\n                    }\r\n                }\r\n\r\n                this.setState({weatherInformation:weatherInformation})\r\n                console.log(weatherInformation)\r\n             })\r\n    }\r\n\r\n    getWeatherData = (city) => {\r\n        this.setState(this.setState({userCity:city}),() => {\r\n            console.log(this.state)\r\n        });\r\n        axios.get(\"/weather?q=\"+city+\"&APPID=0a11aab6ebc27539f6bac125b08418ae\")\r\n             .then(response => {\r\n                let weatherInformation = {\r\n                    coordinates:{\r\n                        latitude:response.data.coord.lat,\r\n                        longitude:response.data.coord.lon\r\n                    },\r\n                    weather: {\r\n                        main:response.data.weather[0].main,\r\n                        description:response.data.weather[0].description,\r\n                        temperature:response.data.main.temp,\r\n                        humidity:response.data.main.humidity,\r\n                        windSpeed:response.data.wind.speed,\r\n                        windDirection:response.data.wind.deg,\r\n                    },\r\n                    others: {\r\n                        sunrise:response.data.sys.sunrise+response.data.timezone,\r\n                        sunset:response.data.sys.sunset+response.data.timezone,\r\n                        city:response.data.name,\r\n                        countryCode:response.data.sys.country,\r\n                        timezone:response.data.timezone\r\n                    }\r\n                }\r\n\r\n                this.setState({weatherInformation:weatherInformation})\r\n                console.log(weatherInformation)\r\n             })\r\n    }\r\n\r\n    render() {\r\n        let containerData = <h1>Loading</h1>;\r\n        if(this.state.weatherInformation)\r\n        {\r\n            containerData = (\r\n                        <Aux>\r\n                             <Row>\r\n                                <Col lg=\"6\" md=\"12\">\r\n                                    <UserInput clicked={this.getWeatherData}/>\r\n                                </Col>\r\n                                <Col lg=\"6\" md=\"12\">\r\n                                    <WeatherReport weatherData={this.state.weatherInformation}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <FiveDaysWeather userCity={this.state.userCity}/>\r\n                        </Aux>\r\n                       \r\n            );\r\n        }\r\n        return (\r\n            <Aux>\r\n                <div className={classes.Container}>\r\n                    <Container>\r\n                        {containerData}\r\n                    </Container>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchWeather;","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Navbar from '../../components/UI/Navbar/Navbar';\r\nimport SearchWeather from '../SearchWeather/SearchWeather';\r\nconst Layout = (props) => {\r\n    return (\r\n        <Aux>\r\n            <Navbar/>\r\n            <SearchWeather/>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Layout from './containers/Layout/Layout';\nclass App extends Component {\n    render() {\n      return (\n        <Layout/>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}